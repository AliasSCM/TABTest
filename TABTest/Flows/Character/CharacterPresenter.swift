//
//  CharacterPresenter.swift
//  TABTest
//
//  Created by master on 4/21/18.
//  Copyright (c) 2018 neemo. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CharacterPresentationLogic
{
  func presentCharacterList(response: CharacterModels.ListCharacters.Response)
}

class CharacterPresenter: CharacterPresentationLogic
{
  weak var viewController: CharacterDisplayLogic?
  
  // MARK: Do something
  
    func presentCharacterList(response: CharacterModels.ListCharacters.Response)
    {
        let viewModel = CharacterViewModelFactory.makeCharacterListViewModel(characters: response.characters)
        
    }
 /* func presentSomething(response: Character.Something.Response)
  {
    let viewModel = Character.Something.ViewModel()
    viewController?.displaySomething(viewModel: viewModel)
  }*/
}

class CharacterViewModelFactory
{
    class func makeCharacterListViewModel(characters : [Character]) -> CharacterModels.ListCharacters.CharacterListVM
    {
        var listViewModel = CharacterModels.ListCharacters.CharacterListVM()
       
        for character in characters
        {
            let cellViewModel = CharacterViewModelFactory.makeCharacterCellViewModel(character: character)
            listViewModel.cellViewModels.append(cellViewModel)
        }
        
        return listViewModel
    }
    class func makeCharacterCellViewModel(character : Character) -> CharacterModels.ListCharacters.CharacterCellVM
    {
        var cellViewModel = CharacterModels.ListCharacters.CharacterCellVM()
        
        cellViewModel.nameString = character.name
        cellViewModel.photoUrl = character.thumbnail.fullPath
        
        return cellViewModel
    }
}
